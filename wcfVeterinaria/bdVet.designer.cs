#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wcfVeterinaria
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vet")]
	public partial class bdVetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAGENDA(AGENDA instance);
    partial void UpdateAGENDA(AGENDA instance);
    partial void DeleteAGENDA(AGENDA instance);
    #endregion
		
		public bdVetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
       
        public bdVetDataContext():
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["vetConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<AGENDA> AGENDA
		{
			get
			{
				return this.GetTable<AGENDA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AGENDA")]
	public partial class AGENDA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCITA;
		
		private string _DESCRIPCION;
		
		private System.Nullable<System.DateTime> _FECHA;
		
		private string _NOMBRECLIENTE;
		
		private System.Nullable<int> _ESTADO;
		
		private System.Nullable<int> _IDMOTIVO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCITAChanging(string value);
    partial void OnIDCITAChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnFECHAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAChanged();
    partial void OnNOMBRECLIENTEChanging(string value);
    partial void OnNOMBRECLIENTEChanged();
    partial void OnESTADOChanging(System.Nullable<int> value);
    partial void OnESTADOChanged();
    partial void OnIDMOTIVOChanging(System.Nullable<int> value);
    partial void OnIDMOTIVOChanged();
    #endregion
		
		public AGENDA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCITA", DbType="Char(18) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCITA
		{
			get
			{
				return this._IDCITA;
			}
			set
			{
				if ((this._IDCITA != value))
				{
					this.OnIDCITAChanging(value);
					this.SendPropertyChanging();
					this._IDCITA = value;
					this.SendPropertyChanged("IDCITA");
					this.OnIDCITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="Char(18)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRECLIENTE", DbType="VarChar(100)")]
		public string NOMBRECLIENTE
		{
			get
			{
				return this._NOMBRECLIENTE;
			}
			set
			{
				if ((this._NOMBRECLIENTE != value))
				{
					this.OnNOMBRECLIENTEChanging(value);
					this.SendPropertyChanging();
					this._NOMBRECLIENTE = value;
					this.SendPropertyChanged("NOMBRECLIENTE");
					this.OnNOMBRECLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO", DbType="Int")]
		public System.Nullable<int> ESTADO
		{
			get
			{
				return this._ESTADO;
			}
			set
			{
				if ((this._ESTADO != value))
				{
					this.OnESTADOChanging(value);
					this.SendPropertyChanging();
					this._ESTADO = value;
					this.SendPropertyChanged("ESTADO");
					this.OnESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMOTIVO", DbType="Int")]
		public System.Nullable<int> IDMOTIVO
		{
			get
			{
				return this._IDMOTIVO;
			}
			set
			{
				if ((this._IDMOTIVO != value))
				{
					this.OnIDMOTIVOChanging(value);
					this.SendPropertyChanging();
					this._IDMOTIVO = value;
					this.SendPropertyChanged("IDMOTIVO");
					this.OnIDMOTIVOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
